url: https://adokter.github.io/bioRad

template:
  params:
    bootswatch: yeti
    docsearch:
      api_key: 482e77c49caf113078e572738762cf40
      index_name: biorad

development:
  mode: auto

authors:
  Adriaan M. Dokter:
    href: "http://adriaandokter.com"
  Peter Desmet:
    href: "https://twitter.com/peterdesmet"
  Stijn Van Hoey:
    href: "https://twitter.com/SVanHoey"

home:
  links:
    - text: Browse latest development docs
      href: "https://adokter.github.io/bioRad/dev/"

reference:
  - title: "Read radar data"
    desc: >
      Functions to read and inspect polar volume (`pvol`) weather radar data.
      Requires a locally running Docker daemon for NEXRAD data.
    contents:
      - is.pvolfile
      - get_odim_object_type
      - nexrad_to_odim
      - apply_mistnet
      - read_pvolfile
      - summary.pvol

  - title: "Inspect scans and parameters"
    desc: >
      Functions to extract and inspect a polar volume scan/sweep (`scan`) and
      its parameters (`param`).
    contents:
      - get_elevation_angles
      - get_scan
      - summary.scan
      - plot.scan
      - example_scan
      - get_param
      - calculate_param
      - summary.param

  - title: "Project scans and parameters"
    desc: >
      Functions to project a scan (`scan`) and its parameters (`param`) on the
      earth's surface as a plan position indicator (`ppi`).
    contents:
      - project_as_ppi
      - summary.ppi
      - "`[.ppi`"
      - plot.ppi
      - map
      - download_basemap
      - composite_ppi
      - scan_to_raster
      - scan_to_spatial

  - title: "Create vertical profiles of biological targets"
    desc: >
      Functions to process polar volume (`pvol`) weather radar data into
      vertical profiles (`vp`) of biological targets. Requires a locally running
      Docker daemon."
    contents:
      - calculate_vp
      - vol2bird_version
      - check_docker
      - update_docker

  - title: "Read vertical profile data"
    desc: >
      Functions to download and read vertical profile (`vp`) or time series of
      vertical profiles (`vpts`) data.
    contents:
      - download_vpfiles
      - select_vpfiles
      - is.vpfile
      - read_vpfiles
      - read_cajun
      - read_vpts

  - title: "Inspect vertical profiles"
    desc: >
      Functions to inspect vertical profiles (`vp`) and time series of vertical
      profiles (`vpts`).
    contents:
      - summary.vp
      - plot.vp
      - as.data.frame.vp
      - c.vp
      - example_vp
      - bind_into_vpts
      - filter_vpts
      - regularize_vpts
      - summary.vpts
      - "`[.vpts`"
      - plot.vpts
      - as.data.frame.vp
      - example_vpts

  - title: "Integrate vertical profiles"
    desc: >
      Functions to calculate e.g. migration traffic rate (MTR) by integrating
      the heights of vertical profiles (`vp` or `vpts`) to an integrated profile
      (`vpi`).
    contents:
      - integrate_profile
      - plot.vpi
      - integrate_to_ppi

  - title: "Access vertical profile metadata"
    desc: >
      Access vertical profile  (`vp`, `vpts`, or `vpi`) quantities and metadata.
    contents:
      - get_quantity
      - rcs
      - "`rcs<-`"
      - sd_vvp_threshold
      - "`sd_vvp_threshold<-`"
      - check_night
      - doy_noy

  - title: "Calculate radar beam properties"
    desc: >
      Functions to calculate radar beam properties.
    contents:
      - beam_height
      - beam_width
      - beam_range
      - beam_distance
      - beam_profile
      - beam_profile_overlap

  - title: "Other functions"
    desc: >
      Functions to calculate or convert attributes and objects.
    contents:
      - dbz_to_eta
      - eta_to_dbz
      - nyquist_velocity
      - sunrise_sunset
      - convert_legacy
